{
  "name": "jupytext-sync",
  "displayName": "Jupytext Sync",
  "description": "Pair and Auto Sync Jupyter Notebooks via Jupytext",
  "version": "1.3.0",
  "engines": {
    "vscode": "^1.72.0"
  },
  "license": "MIT",
  "categories": [
    "Notebooks",
    "Data Science",
    "Programming Languages",
    "Visualization",
    "Machine Learning",
    "AI",
    "Education",
    "Other"
  ],
  "keywords": [
    "python",
    "jupyter",
    "jupytext",
    "nbconvert",
    "notebook",
    "notebooks",
    "synced",
    "paired",
    "markdown",
    "myst",
    "sphinx",
    "quarto",
    "pandoc",
    "rmarkdown",
    "hydrogen",
    "light",
    "nomarker",
    "percent",
    "spin"
  ],
  "publisher": "caenrigen",
  "homepage": "https://github.com/caenrigen/vscode-jupytext-sync",
  "repository": {
    "type": "git",
    "url": "https://github.com/caenrigen/vscode-jupytext-sync.git"
  },
  "bugs": {
    "url": "https://github.com/caenrigen/vscode-jupytext-sync/issues"
  },
  "icon": "icon.png",
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "customEditors": [
      {
        "viewType": "jupytextSync.pairedNotebookEditor",
        "displayName": "Jupytext Paired Notebook",
        "selector": [
          {
            "filenamePattern": "{*.R,*.Rmd,*.clj,*.coco,*.cpp,*.cs,*.do,*.fs,*.fsx,*.go,*.gp,*.groovy,*.hs,*.java,*.jl,*.js,*.lgt,*.logtalk,*.lua,*.m,*.mac,*.markdown,*.md,*.ml,*.mnb,*.myst,*.mystnb,*.pro,*.ps1,*.py,*.q,*.qmd,*.r,*.resource,*.robot,*.rs,*.sage,*.sas,*.scala,*.scm,*.sh,*.sos,*.ss,*.tcl,*.ts,*.wolfram,*.xsh}"
          }
        ],
        "priority": "default"
      }
    ],
    "configuration": {
      "title": "Jupytext Sync",
      "properties": {
        "jupytextSync.pythonExecutable": {
          "type": "string",
          "default": "",
          "markdownDescription": "The path to the Python executable used to invoke [`jupytext`](https://jupytext.readthedocs.io).\n\nJupytext Sync requires a Python executable to be installed along with the `jupytext` package.\n\n**Automatic discovery:** If not specified in your User/Workspace settings, Jupytext Sync attempts to find a Python executable that has `jupytext` installed. If you have the Microsoft Python extension installed ([open in VSCode](vscode:extension/ms-python.python) / [open on marketplace](https://marketplace.visualstudio.com/items?itemName=ms-python.python)), Jupytext will be able to detect Python virtual environments (e.g., `venv`, `conda`, `virtualenv`, etc.), besides the `python` and `python3` from your `$PATH`. If more than one Python executable is found, the one that provides the highest version of `jupytext` is selected.\nTip: If you would like to know if Jupytext Sync found your python executable(s), you can check the logs in the [_Jupytext Sync Output_](command:jupytextSync.showLogs) panel.\n\n**Manual override:** If the automatic discovery failed or you want to use a different Python executable, you can specify the path to the Python executable.\nAlternatively, you can set it to, e.g., `python3` if you want to use the `python3` from your `$PATH`. For this to work as expected, you might have to launch VSCode from terminal, otherwise `$PATH` might differ from what you are used to in the terminal. If you use a virtual python environment, you have to activate it first.\n\n**Variables:** `${workspaceFolder}` is replaced with the workspace folder path.",
          "order": 0
        },
        "jupytextSync.autoOpenNotebook": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Automatically open the paired `.ipynb` notebook when opening a text file (e.g., `.py`, `.md`) that is paired with a notebook via Jupytext.\n\nWhen enabled, opening a paired text file will:\n1. Check if the file has a paired `.ipynb` format.\n2. Sync the files.\n3. Open the `.ipynb` file in the Notebook Editor instead.\n\nThis provides a seamless notebook-first editing experience for paired files. You can bypass this behavior using the **'Open With...'** context menu to open the file as a regular text file.\n\nThis only affects files that `jupytext` reports as paired. Unpaired files will open normally in the text editor.\n\nConsider using the [`workbench.editorAssociations`](command:workbench.action.openSettings?%5B%22%40id%3Aworkbench.editorAssociations%22%5D) setting to prevent UI artifacts when you disable this feature, or to override the editor association per file extension.\n\nFor a smoother UI experience, consider disabling [`workbench.editor.enablePreview`](command:workbench.action.openSettings?%5B%22%40id%3Aworkbench.editor.enablePreview%22%5D) setting.",
          "order": 1
        },
        "jupytextSync.deleteOnNotebookClose": {
          "type": "string",
          "default": "ask",
          "enum": [
            "never",
            "ask",
            "yes",
            "if auto created"
          ],
          "enumDescriptions": [
            "Never delete the notebook file when closing",
            "Always ask for confirmation before deleting",
            "Always delete if the notebook has paired formats",
            "Only delete if the notebook was auto-created by this extension via 'Open as paired Notebook' or by opening a paired text file with the custom editor"
          ],
          "markdownDescription": "Control whether to delete the `.ipynb` notebook file when closing a paired notebook editor.\n\nDeleted files are moved to the system trash/recycle bin and can be recovered.\n\nThis feature is designed for workflows where the `.ipynb` file is generated from source text files (e.g., `.py`, `.md`) and the text file is the primary source of truth.",
          "order": 2
        },
        "jupytextSync.syncDocuments": {
          "type": "object",
          "default": {
            "onNotebookDocumentOpen": false,
            "onNotebookDocumentSave": true,
            "onNotebookDocumentClose": false,
            "onTextDocumentOpen": false,
            "onTextDocumentSave": true,
            "onTextDocumentClose": false
          },
          "properties": {
            "onNotebookDocumentOpen": {
              "type": "boolean",
              "description": "Sync paired files when opening a notebook document"
            },
            "onNotebookDocumentSave": {
              "type": "boolean",
              "description": "Sync paired files when saving a notebook document"
            },
            "onNotebookDocumentClose": {
              "type": "boolean",
              "description": "Sync paired files when closing a notebook document"
            },
            "onTextDocumentOpen": {
              "type": "boolean",
              "description": "Sync paired files when opening a supported text document"
            },
            "onTextDocumentSave": {
              "type": "boolean",
              "description": "Sync paired files when saving a supported text document"
            },
            "onTextDocumentClose": {
              "type": "boolean",
              "description": "Sync paired files when closing a supported text document"
            }
          },
          "additionalProperties": false,
          "markdownDescription": "Controls on which events to attempt to `jupytext --sync` previously paired documents (in the text/notebook editor).\n\nNote that this will apply even if the pairing has been performed externally, e.g., manually running `jupytext --set-formats ...` in the terminal, and the pairing metadata has been saved in the text document (or you have a `jupytext.toml`/ `pyproject.toml` file with default formats).\n\n**NB** the `on*Open`/`on*Close` events might be flaky, e.g., triggering multiple times.",
          "order": 3
        },
        "jupytextSync.askFormats": {
          "type": "object",
          "additionalProperties": false,
          "default": {
            "onOpenPairedNotebook": false,
            "onPairDocuments": true
          },
          "properties": {
            "onOpenPairedNotebook": {
              "type": "boolean",
              "description": "Ask for the pairing file formats before opening a text document as paired notebook."
            },
            "onPairDocuments": {
              "type": "boolean",
              "description": "Ask for the pairing file formats before pairing documents."
            }
          },
          "markdownDescription": "Controls whether to ask for the pairing file formats before executing commands that may require pairing files. If `false`, the default pairing file formats specified in the [Default Formats](command:workbench.action.openSettings?%5B%22%40id%3AjupytextSync.defaultFormats%22%5D) configuration will be used.",
          "order": 4
        },
        "jupytextSync.defaultFormats": {
          "type": "object",
          "uniqueKeys": true,
          "additionalProperties": {
            "type": "string"
          },
          "additionalItems": {
            "type": "string"
          },
          "default": {
            "default": "ipynb,${ext}:percent",
            ".ipynb": "ipynb,py:percent",
            ".md": "ipynb,md:markdown",
            ".markdown": "ipynb,markdown:markdown",
            ".Rmd": "default",
            ".py": "default",
            ".coco": "default",
            ".R": "default",
            ".r": "default",
            ".jl": "default",
            ".cpp": "default",
            ".ss": "default",
            ".clj": "default",
            ".scm": "default",
            ".sh": "default",
            ".ps1": "default",
            ".q": "default",
            ".m": "default",
            ".wolfram": "default",
            ".pro": "default",
            ".js": "default",
            ".ts": "default",
            ".scala": "default",
            ".rs": "default",
            ".robot": "default",
            ".resource": "default",
            ".cs": "default",
            ".fsx": "default",
            ".fs": "default",
            ".sos": "default",
            ".java": "default",
            ".groovy": "default",
            ".sage": "default",
            ".ml": "default",
            ".hs": "default",
            ".tcl": "default",
            ".mac": "default",
            ".gp": "default",
            ".do": "default",
            ".sas": "default",
            ".xsh": "default",
            ".lgt": "default",
            ".logtalk": "default",
            ".lua": "default",
            ".go": "default",
            ".qmd": "default",
            ".myst": "default",
            ".mystnb": "default",
            ".mnb": "default"
          },
          "markdownDescription": "Define default Jupytext pairing formats (e.g., `ipynb,py:percent`) to control how Jupytext Sync pairs and syncs files. Formats can be overridden per file when pairing or opening as notebook, see [Ask Formats](command:workbench.action.openSettings?%5B%22%40id%3AjupytextSync.askFormats%22%5D).\n\n**Syntax:** Uses Jupytext's `--set-formats` string. `${ext}` is the file extension (w/out `.`).\n\n**`default` Key:** An extension set to `default` inherits this key's format string.\n\n**Subdirectories:** Prefix with `dir_name//` (e.g., `notebooks//ipynb,scripts//py:percent,md`). Paths are relative to the source file's parent dir. \n\n**Docs:** For all Jupytext formats and detailed syntax, see the [Jupytext documentation](https://jupytext.readthedocs.io/en/latest/formats.html).\n\n**Activation:** Enabled for file extensions recognized by your installed `jupytext` package. Unsupported entries will be ignored.",
          "title": "Default pairing file formats",
          "order": 6
        },
        "jupytextSync.enabledMenus": {
          "type": "object",
          "order": 5,
          "additionalProperties": false,
          "default": {
            "explorerContext": true,
            "editorContext": true,
            "editorTitle": true,
            "editorTitleContext": true,
            "notebookToolbar": true,
            "notebookToolbarInsertRaw": true,
            "notebookToolbarToRaw": true
          },
          "properties": {
            "explorerContext": {
              "type": "boolean",
              "description": "Enable the Pair via Jupytext command in the Explorer context menu"
            },
            "editorContext": {
              "type": "boolean",
              "description": "Enable the Pair via Jupytext command in the Editor context menu"
            },
            "editorTitle": {
              "type": "boolean",
              "description": "Enable the Pair via Jupytext command in the Editor title menu"
            },
            "editorTitleContext": {
              "type": "boolean",
              "description": "Enable the Pair via Jupytext command in the Editor title context menu"
            },
            "notebookToolbar": {
              "type": "boolean",
              "description": "Enable the Pair via Jupytext command in the Notebook toolbar"
            },
            "notebookToolbarInsertRaw": {
              "type": "boolean",
              "description": "Enable the Insert Raw Cell command in the Notebook toolbar"
            },
            "notebookToolbarToRaw": {
              "type": "boolean",
              "description": "Enable the To Raw Cell command in the Notebook toolbar"
            }
          },
          "markdownDescription": "Enable or disable Jupytext menus and buttons"
        },
        "jupytextSync.setFormatsArgs": {
          "type": "array",
          "order": 7,
          "items": {
            "type": "string",
            "description": "Argument key/flag to pass"
          },
          "default": [
            "--set-formats"
          ],
          "markdownDescription": "Command-line arguments of `jupytext --set-formats` invocation (e.g., `--set-formats, --some-flag`). The order is preserved. Formats are inserted after the `--set-formats` flag (if present)."
        },
        "jupytextSync.syncArgs": {
          "type": "array",
          "order": 8,
          "items": {
            "type": "string",
            "description": "Argument key/flag to pass"
          },
          "default": [
            "--sync"
          ],
          "markdownDescription": "Command-line arguments of `jupytext --sync` invocation (e.g., `--sync, --use-source-timestamp`). The order is preserved."
        }
      }
    },
    "commands": [
      {
        "command": "jupytextSync.showLogs",
        "title": "Show Jupytext Sync Logs",
        "category": "Jupytext"
      },
      {
        "command": "jupytextSync.locatePythonAndJupytext",
        "title": "Locate Python and Jupytext",
        "category": "Jupytext"
      },
      {
        "command": "jupytextSync.pair",
        "title": "Pair via Jupytext",
        "shortTitle": "Pair",
        "category": "Jupytext",
        "icon": "$(notebook-open-as-text)"
      },
      {
        "command": "jupytextSync.openPairedNotebook",
        "title": "Open as paired Notebook via Jupytext",
        "shortTitle": "Open as Notebook",
        "category": "Jupytext",
        "icon": "$(notebook-template)"
      },
      {
        "command": "jupytextSync.cell.insertRawCodeCellBelowAndFocusContainer",
        "title": "Insert Raw Code Cell Below and Focus Container",
        "shortTitle": "Raw",
        "category": "Jupytext",
        "icon": "$(add)"
      },
      {
        "command": "jupytextSync.cell.insertRawCodeCellAboveAndFocusContainer",
        "title": "Insert Raw Code Cell Above and Focus Container",
        "shortTitle": "Raw Above",
        "category": "Jupytext",
        "icon": "$(insert)"
      },
      {
        "command": "jupytextSync.cell.changeToCode",
        "title": "Change Cell to default Code",
        "shortTitle": "To Code",
        "category": "Jupytext",
        "icon": "$(code)"
      },
      {
        "command": "jupytextSync.cell.changeToRaw",
        "title": "Change Cell to Raw Code",
        "shortTitle": "To Raw",
        "category": "Jupytext",
        "icon": "$(list-flat)"
      },
      {
        "command": "jupytextSync.cell.toggleRaw",
        "title": "Toggle Cell between Raw Code and default Code",
        "shortTitle": "Toggle Raw",
        "category": "Jupytext",
        "icon": "$(arrow-swap)"
      },
      {
        "command": "jupytextSync.setSuggestedCompactNotebookLayout",
        "title": "Set Suggested Compact Notebook Layout",
        "category": "Jupytext"
      }
    ],
    "keybindings": [
      {
        "command": "jupytextSync.cell.changeToCode",
        "key": "y",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook'"
      },
      {
        "command": "jupytextSync.cell.toggleRaw",
        "key": "r",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook'"
      },
      {
        "command": "jupytextSync.cell.insertRawCodeCellBelowAndFocusContainer",
        "key": "t",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook'"
      },
      {
        "command": "jupytextSync.cell.insertRawCodeCellAboveAndFocusContainer",
        "key": "e",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook'"
      },
      {
        "key": "i i",
        "command": "jupyter.interruptkernel",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook'"
      },
      {
        "key": "0 0",
        "command": "jupyter.restartkernel",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook'"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "jupytextSync.pair",
          "when": "config.jupytextSync.enabledMenus.explorerContext && resourceLangId && resourceScheme == 'file' && resourceExtname in jupytextSync.supportedExtensions"
        },
        {
          "command": "jupytextSync.openPairedNotebook",
          "when": "config.jupytextSync.enabledMenus.explorerContext && resourceLangId && resourceScheme == 'file' && resourceExtname in jupytextSync.supportedExtensions && resourceExtname != '.ipynb'"
        }
      ],
      "editor/context": [
        {
          "command": "jupytextSync.pair",
          "when": "config.jupytextSync.enabledMenus.editorContext && resourceLangId && resourceScheme == 'file' && resourceExtname in jupytextSync.supportedExtensions"
        },
        {
          "command": "jupytextSync.openPairedNotebook",
          "when": "config.jupytextSync.enabledMenus.editorContext && resourceLangId && resourceScheme == 'file' && resourceExtname in jupytextSync.supportedExtensions && resourceExtname != '.ipynb'"
        }
      ],
      "editor/title": [
        {
          "command": "jupytextSync.pair",
          "when": "config.jupytextSync.enabledMenus.editorTitle && resourceLangId && resourceScheme == 'file' && resourceExtname in jupytextSync.supportedExtensions",
          "group": "navigation"
        },
        {
          "command": "jupytextSync.openPairedNotebook",
          "when": "config.jupytextSync.enabledMenus.editorTitle && resourceLangId && resourceScheme == 'file' && resourceExtname in jupytextSync.supportedExtensions && resourceExtname != '.ipynb'",
          "group": "navigation"
        }
      ],
      "editor/title/context": [
        {
          "command": "jupytextSync.pair",
          "when": "config.jupytextSync.enabledMenus.editorTitleContext && resourceLangId && resourceScheme == 'file' && resourceExtname in jupytextSync.supportedExtensions"
        },
        {
          "command": "jupytextSync.openPairedNotebook",
          "when": "config.jupytextSync.enabledMenus.editorTitleContext && resourceLangId && resourceScheme == 'file' && resourceExtname in jupytextSync.supportedExtensions && resourceExtname != '.ipynb'"
        }
      ],
      "notebook/toolbar": [
        {
          "command": "jupytextSync.pair",
          "when": "config.jupytextSync.enabledMenus.notebookToolbar && resourceLangId && resourceScheme == 'file' && resourceExtname in jupytextSync.supportedExtensions",
          "group": "navigation"
        },
        {
          "command": "jupytextSync.openPairedNotebook",
          "when": "config.jupytextSync.enabledMenus.notebookToolbar && resourceLangId && resourceScheme == 'file' && resourceExtname in jupytextSync.supportedExtensions && resourceExtname != '.ipynb'",
          "group": "navigation"
        },
        {
          "command": "jupytextSync.cell.insertRawCodeCellBelowAndFocusContainer",
          "when": "config.jupytextSync.enabledMenus.notebookToolbarInsertRaw && resourceLangId && resourceExtname in jupytextSync.supportedExtensions",
          "group": "navigation/edit@0"
        },
        {
          "command": "jupytextSync.cell.toggleRaw",
          "when": "config.jupytextSync.enabledMenus.notebookToolbarToRaw && resourceLangId && resourceExtname in jupytextSync.supportedExtensions",
          "group": "navigation/edit@1"
        }
      ]
    }
  },
  "scripts": {
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run lint --fix && yarn run compile",
    "lint": "eslint src",
    "ide": "cursor",
    "vsix:build": "yarn pretest && yarn vsce package -o jupytext-sync.vsix",
    "vsix:install": "yarn vsix:build && yarn ide --install-extension jupytext-sync.vsix",
    "publish:vsce": "yarn vsix:build && yarn vsce publish",
    "publish:ovsx": "yarn vsix:build && yarn ovsx publish jupytext-sync.vsix"
  },
  "devDependencies": {
    "@types/node": "20.x",
    "@types/vscode": "^1.72.0",
    "@typescript-eslint/eslint-plugin": "^8.10.0",
    "@typescript-eslint/parser": "^8.7.0",
    "@vscode/vsce": "^3.3.2",
    "eslint": "^9.13.0",
    "typescript": "^5.6.3",
    "ovsx": "^0.10.2"
  },
  "dependencies": {
    "@vscode/python-extension": "^1.0.5"
  }
}
